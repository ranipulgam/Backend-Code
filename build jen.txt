pipeline {
    agent any

    environment {
        // Define the Docker image name and credentials ID
        DOCKER_IMAGE = 'your-dockerhub-username/your-app-name'
        DOCKERHUB_CREDENTIALS = credentials('dockerhub-credentials')
    }

    stages {
        stage('Clone Repository') {
            steps {
                // Clone the source code from Git
                git branch: 'main', url: 'https://github.com/your-username/your-repo.git'
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    // Build the Docker image with the current Jenkins build number as the tag
                    dockerImage = docker.build("${DOCKER_IMAGE}:${env.BUILD_NUMBER}")
                }
            }
        }

        stage('Login to Docker Registry') {
            steps {
                script {
                    // Login to Docker Hub or your container registry
                    docker.withRegistry('https://index.docker.io/v1/', 'dockerhub-credentials') {
                        echo 'Logged into Docker Registry'
                    }
                }
            }
        }

        stage('Push Docker Image') {
            steps {
                script {
                    // Push the Docker image to Docker Hub or another registry
                    docker.withRegistry('https://index.docker.io/v1/', 'dockerhub-credentials') {
                        dockerImage.push()
                    }
                }
            }
        }

        stage('Cleanup') {
            steps {
                // Clean up the Docker image from the Jenkins server to free space
                sh "docker rmi ${DOCKER_IMAGE}:${env.BUILD_NUMBER}"
            }
        }
    }
}
